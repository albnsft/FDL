==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
├─IntermediateLayerGetter: 1-1           [[-1, 2048, 25, 19]]      --
|    └─Conv2d: 2-1                       [-1, 64, 100, 75]         9,408
|    └─BatchNorm2d: 2-2                  [-1, 64, 100, 75]         128
|    └─ReLU: 2-3                         [-1, 64, 100, 75]         --
|    └─MaxPool2d: 2-4                    [-1, 64, 50, 38]          --
|    └─Sequential: 2-5                   [-1, 256, 50, 38]         --
|    |    └─Bottleneck: 3-1              [-1, 256, 50, 38]         75,008
|    |    └─Bottleneck: 3-2              [-1, 256, 50, 38]         70,400
|    |    └─Bottleneck: 3-3              [-1, 256, 50, 38]         70,400
|    └─Sequential: 2-6                   [-1, 512, 25, 19]         --
|    |    └─Bottleneck: 3-4              [-1, 512, 25, 19]         379,392
|    |    └─Bottleneck: 3-5              [-1, 512, 25, 19]         280,064
|    |    └─Bottleneck: 3-6              [-1, 512, 25, 19]         280,064
|    |    └─Bottleneck: 3-7              [-1, 512, 25, 19]         280,064
|    └─Sequential: 2-7                   [-1, 1024, 25, 19]        --
|    |    └─Bottleneck: 3-8              [-1, 1024, 25, 19]        1,512,448
|    |    └─Bottleneck: 3-9              [-1, 1024, 25, 19]        1,117,184
|    |    └─Bottleneck: 3-10             [-1, 1024, 25, 19]        1,117,184
|    |    └─Bottleneck: 3-11             [-1, 1024, 25, 19]        1,117,184
|    |    └─Bottleneck: 3-12             [-1, 1024, 25, 19]        1,117,184
|    |    └─Bottleneck: 3-13             [-1, 1024, 25, 19]        1,117,184
|    └─Sequential: 2-8                   [-1, 2048, 25, 19]        --
|    |    └─Bottleneck: 3-14             [-1, 2048, 25, 19]        6,039,552
|    |    └─Bottleneck: 3-15             [-1, 2048, 25, 19]        4,462,592
|    |    └─Bottleneck: 3-16             [-1, 2048, 25, 19]        4,462,592
├─DeepLabHead: 1-2                       [-1, 21, 25, 19]          --
|    └─ASPP: 2-9                         [-1, 256, 25, 19]         --
|    |    └─Sequential: 3-17             [-1, 256, 25, 19]         328,192
|    └─Conv2d: 2-10                      [-1, 256, 25, 19]         589,824
|    └─BatchNorm2d: 2-11                 [-1, 256, 25, 19]         512
|    └─ReLU: 2-12                        [-1, 256, 25, 19]         --
|    └─Conv2d: 2-13                      [-1, 21, 25, 19]          5,397
├─FCNHead: 1-3                           [-1, 21, 25, 19]          --
|    └─Conv2d: 2-14                      [-1, 256, 25, 19]         2,359,296
|    └─BatchNorm2d: 2-15                 [-1, 256, 25, 19]         512
|    └─ReLU: 2-16                        [-1, 256, 25, 19]         --
|    └─Dropout: 2-17                     [-1, 256, 25, 19]         --
|    └─Conv2d: 2-18                      [-1, 21, 25, 19]          5,397
==========================================================================================
Total params: 26,797,162
Trainable params: 26,797,162
Non-trainable params: 0
Total mult-adds (G): 11.90
==========================================================================================
Input size (MB): 0.34
Forward/backward pass size (MB): 205.08
Params size (MB): 102.22
Estimated Total Size (MB): 307.65
==========================================================================================
*****************************training*************************
*****************************validation*************************
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([1, 21, 200, 150]) lbl shape : torch.Size([1, 200, 150])
Epoch [1] took 195.76s | train_loss: 0.0061, val_loss: 0.0000
*****************************training*************************
*****************************validation*************************
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([3, 21, 200, 150]) lbl shape : torch.Size([3, 200, 150])
outputs shape : torch.Size([1, 21, 200, 150]) lbl shape : torch.Size([1, 200, 150])
Epoch [2] took 197.64s | train_loss: 0.0000, val_loss: 0.0000
Traceback (most recent call last):
  File "C:\Users\alban\PycharmProjects\FDL\Kaggle\main.py", line 597, in <module>
    pred_mask = Net.predict(data.valset, 10, 0)
  File "C:\Users\alban\PycharmProjects\FDL\Kaggle\main.py", line 497, in predict
    self.model = Utils.load_model(self.model, epoch, self.path, self.param_model.device)
  File "C:\Users\alban\PycharmProjects\FDL\Kaggle\main.py", line 568, in load_model
    model.load_state_dict(torch.load(f'{path}/model_{epoch}.pt', map_location=torch.device('cpu')))
  File "C:\Users\alban\PycharmProjects\FDL\venv\lib\site-packages\torch\serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "C:\Users\alban\PycharmProjects\FDL\venv\lib\site-packages\torch\serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "C:\Users\alban\PycharmProjects\FDL\venv\lib\site-packages\torch\serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\alban\\PycharmProjects\\FDL\\Kaggle\\output\\DeepLabV3_resnet50/model_None.pt'